name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:

  cypress-tests:
    if: github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install wait-on
        run: npm install -g wait-on

      - name: Start France stack
        run: docker compose -f docker-compose.fr.yml up -d

      - name: Start USA stack
        run: docker compose -f docker-compose.usa.yml up -d

      - name: Start Suisse stack
        run: docker compose -f docker-compose.ch.yml up -d

      - name: Install Cypress dependencies
        run: npm ci
        working-directory: ./cypress

      - name: Run Cypress tests USA
        run: npx cypress run
        working-directory: ./cypress
        env:
          CYPRESS_BASE_URL: http://localhost:3000
      - name: Run Cypress tests France
        run: npx cypress run
        working-directory: ./cypress
        env:
          CYPRESS_BASE_URL: http://localhost:3002

      - name: Run Cypress tests Suisse
        run: npx cypress run
        working-directory: ./cypress
        env:
          CYPRESS_BASE_URL: http://localhost:3004

  build-and-push:
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}          
      - run: |
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')

          # Backend
          docker build -t ghcr.io/${REPO_LC}/backend-suisse:latest -f backend/Dockerfile ./backend
          docker push ghcr.io/${REPO_LC}/backend-suisse:latest

          # API IA
          docker build -t ghcr.io/${REPO_LC}/api-ia-suisse:latest -f ml_api/Dockerfile ./ml_api
          docker push ghcr.io/${REPO_LC}/api-ia-suisse:latest

          # Frontend
          docker build -t ghcr.io/${REPO_LC}/frontend-suisse:latest \
            --build-arg VITE_API_URL=${VITE_API_URL_CH} \
            --build-arg VITE_COUNTRY=${VITE_COUNTRY_CH} \
            --build-arg VITE_LOCALE=${VITE_LOCALE_CH} \
            --build-arg VITE_GDPR_MODE=${VITE_GDPR_MODE_CH} \
            --build-arg VITE_MULTI_LANG=${VITE_MULTI_LANG_CH} \
            -f frontend/Dockerfile ./frontend
          docker push ghcr.io/${REPO_LC}/frontend-suisse:latest

          # ETL
          docker build -t ghcr.io/${REPO_LC}/etl-suisse:latest -f csv_to_postgres/Dockerfile .
          docker push ghcr.io/${REPO_LC}/etl-suisse:latest